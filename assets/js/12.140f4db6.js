(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{221:function(t,e,s){"use strict";s.r(e);var o=s(0),a=Object(o.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"浅析cookie、session、localstorage、sessionstorage之不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浅析cookie、session、localstorage、sessionstorage之不同"}},[t._v("#")]),t._v(" 浅析cookie、session、localStorage、sessionStorage之不同")]),t._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[t._v("Cookie")]),t._v(" "),s("ul",[s("li",[t._v("Cookie顾名思义，小甜饼，小饼干的意思，它的小主要定义在数据大小限制为4KB左右，它的作用可谓是十分的强大了。Cookie是网站为了标识用户身份而存储在客户端的一个存储技术，同时它还能做用户的身份验证。")])]),t._v(" "),s("p",[t._v("Session")]),t._v(" "),s("ul",[s("li",[t._v("Session翻译过来的意思是会话，它在前后端中的意思可以理解为数据的存储形式，它能够配合cookie实现用户身份的验证，而在本篇文章的后面提及到的sessionStroage，是一个前端概念，它可以将一部分数据在当前的会话窗口中保存下来，刷新页面数据依旧存在。但当页面关闭后，sessionStorage中的数据会被清空的，可以理解为当前会话窗口已关闭。")])]),t._v(" "),s("h2",{attrs:{id:"聊一聊cookie和session的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聊一聊cookie和session的区别"}},[t._v("#")]),t._v(" 聊一聊cookie和session的区别")]),t._v(" "),s("h3",{attrs:{id:"cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),s("p",[t._v("cookie通常用于前后端进行身份验证的时候，标记用户的身份与众不同。说到cookie的作用，为什么要使用cookie，那就可能会说到http了，因为http是一种无状态的协议，无状态(大家可以理解为我上一秒登陆完网站，下一秒服务器再次收到访问网站请求的时候，它不认识你了，需要再次登陆，也可以说是不知道哪个客户端向服务器发送了请求)这就会导致一种情况出现：某个同学刚登陆完淘宝，跳转到购物车界面，加入完购物车的时候，需要再次登陆，想想这种用户体验真的是太差了~所以Cookie诞生了。")]),t._v(" "),s("h4",{attrs:{id:"cookie的缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie的缺点"}},[t._v("#")]),t._v(" Cookie的缺点")]),t._v(" "),s("p",[t._v("但是cookie不是很安全，因为别人可以分析存放在本地的cookie并进行恶意使用，自然而然我们想到了网站漏洞XSS攻击(跨站脚本攻击)，它的原理：攻击者往web页面里插入恶意的脚本代码(css,js)当用户浏览该页面时，嵌入其中的脚本代码会执行，从而达到恶意攻击用户的目的，从而盗取cookie，破坏页面结构,这就需要我们在cookie字段中加入HttpOnly属性，保护好cookie，或者我们可以利用session，在服务器端用session去管理cookie")]),t._v(" "),s("h3",{attrs:{id:"session是什么哇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#session是什么哇"}},[t._v("#")]),t._v(" session是什么哇")]),t._v(" "),s("p",[t._v("session是由cookie进行标记的，将cookie里的数据保存在服务器端,当需要记住用户时，比如前面说的登陆，在服务器端会设置一个响应头Set-Cookie，返回给客户端，例如：Set-Cooki:SESSIONID=654321；客户端接收到这个响应后，此后每次发送一个请求，浏览器都会自动带上Cookie请求头这个小饼干，小印记，对应内容则是Cookie:ESSIONID=654321,在服务器端存有session，以后每次客户端发送请求的时候都会与服务器端的session进行对比，如果对上了，就可以识别是哪个客户端发来的请求了。")]),t._v(" "),s("h4",{attrs:{id:"session的缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#session的缺点"}},[t._v("#")]),t._v(" session的缺点")]),t._v(" "),s("p",[t._v("因为session在服务器端存储，会出现什么的情况呢？当一年一度的淘宝双11来临时，淘宝官网无疑会被大量访问，当同一个域名被大量访问时，一个域名下的众多服务器保存着同样的session，这样session所占的内存难以想象，这样会降低服务器的性能，考虑到服务器的性能优化\n"),s("br"),t._v(" "),s("br"),s("strong",[t._v("解决办法：")]),t._v(" "),s("br"),t._v("\n(1)"),s("strong",[t._v("共享session")]),t._v(" "),s("br"),t._v("\n将session提取出来，集中存放管理\n"),s("br"),t._v("\n(2)"),s("strong",[t._v("token令牌验证")]),t._v(" "),s("br"),t._v("\n客户端与服务器端的通信服务不需要存储，当进行通信交互时，可以通过解析token里面的信息来判断是否登陆。token里面可以携带cookie解析出来的信息，这样每次请求时添加一个token验证，就可以达到优化服务器性能的效果了。\n"),s("br")]),t._v(" "),s("h3",{attrs:{id:"安全性的考虑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全性的考虑"}},[t._v("#")]),t._v(" 安全性的考虑")]),t._v(" "),s("p",[t._v("需要注意的是，不是什么数据都适合放在 Cookie、localStorage 和 sessionStorage 中的。使用它们的时候，需要时刻注意是否有代码存在 XSS 注入的风险。"),s("br"),s("br"),t._v(" "),s("strong",[t._v("个人建议：")]),s("br")]),t._v(" "),s("ul",[s("li",[t._v("像登陆注册这样的重要、敏感信息应当保存在session中"),s("br")]),t._v(" "),s("li",[t._v("其次临时需要信息可以存储在cookie中")])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"localstorage、sessionstorage的异同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#localstorage、sessionstorage的异同"}},[t._v("#")]),t._v(" localStorage、sessionStorage的异同")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特性")]),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[s("Center",[t._v("Cookie")])],1),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("Center",[t._v("LocalStorage")])],1),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[s("Center",[t._v("sessionStorage")])],1)])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("数据的生命周期")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[s("p",{attrs:{align:"left"}},[t._v("一般由服务器端生成"),s("br"),t._v("可设置失效时间。如"),s("br"),t._v("果在浏览器生成,默认"),s("br"),t._v("是关闭浏览器之后失效")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("p",{attrs:{align:"center"}},[t._v("一旦存入，"),s("br"),t._v("除非清除，"),s("br"),t._v("否则永久保存")])]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[s("p",{attrs:{align:"center"}},[t._v("仅在当前会话有效，"),s("br"),t._v("关闭页面或浏览器后被清除")])])]),t._v(" "),s("tr",[s("td",[t._v("存放数据大小"),s("p")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[s("p",{attrs:{align:"center"}},[t._v("4KB")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("p",{attrs:{align:"center"}},[t._v("一般为5MB")])]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[s("p",{attrs:{align:"center"}},[t._v("一般为5MB")])])]),t._v(" "),s("tr",[s("td",[s("p",{attrs:{align:"center"}},[t._v("与服务器端通信 ")])]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[s("p",{attrs:{align:"left"}},[t._v("每次都会携带在同源"),s("br"),t._v("的http请求头中,如果"),s("br"),t._v("使用cookie保存过多"),s("br"),t._v("数据会带来性能问题的")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("p",{attrs:{align:"left"}},[t._v("仅在客户端中保存"),s("br"),t._v("不参与服务器之间的通信")])]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[s("p",{attrs:{align:"left"}},[t._v("仅在客户端中保存"),s("br"),t._v("不参与服务器之间的通信")])])]),t._v(" "),s("tr",[s("td",[t._v("用途"),s("p")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[s("p",{attrs:{align:"left"}},[t._v("服务器端生成，"),s("br"),t._v("用于标识用户身份")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("p",{attrs:{align:"left"}},[t._v("用于浏览器缓存数据")])]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[s("p",{attrs:{align:"left"}},[t._v("用于浏览器缓存数据")])])])])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"localstorage、sessionstorage的操作方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#localstorage、sessionstorage的操作方法"}},[t._v("#")]),t._v(" localStorage、sessionStorage的操作方法")]),t._v(" "),s("p",[s("strong",[t._v("setItem")]),t._v("存储value")]),t._v(" "),s("p",[t._v("用途：将value存储到key字段")]),t._v(" "),s("p",[t._v('{  sessionStorage.setItem("key", "value");        localStorage.setItem("site", "lsh");  }')]),t._v(" "),s("br"),t._v(" "),s("p",[s("strong",[t._v("getItem")]),t._v("获取value")]),t._v(" "),s("p",[t._v("用途：获取指定key本地存储的值")]),t._v(" "),s("p",[t._v('{  var value = sessionStorage.getItem("key");      var site = localStorage.getItem("site");  }')]),t._v(" "),s("br"),t._v(" "),s("p",[s("strong",[t._v("removeItem")]),t._v("删除key")]),t._v(" "),s("p",[t._v("用途：删除指定key本地存储的值")]),t._v(" "),s("p",[t._v('{  sessionStorage.removeItem("key");     localStorage.removeItem("site");  }')]),t._v(" "),s("br"),t._v(" "),s("p",[s("strong",[t._v("clear")]),t._v("清除所有的key/value")]),t._v(" "),s("p",[t._v("用途：清除所有的key/value")]),t._v(" "),s("p",[t._v("{  sessionStorage.clear();     localStorage.clear();  }")]),t._v(" "),s("br"),t._v(" "),s("h4",{attrs:{id:"出处："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#出处："}},[t._v("#")]),t._v(" 出处：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/justlpf/article/details/82662365",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cookie、LocalStorage 与 SessionStorage的区别在哪里？"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/qq_35585701/article/details/81393361",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解cookie、session、localStorage、sessionStorage之不同"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=a.exports}}]);